///////////////////////////////////////////////////////////////////////////////////
/*                                                                               */
/*                   DESTRUCTURATION D'OBJETS ET DE TABLEAUX                     */
/*                                                                               */
///////////////////////////////////////////////////////////////////////////////////

// Cr√©er des variables par d√©composition √† partir d'un objet

const product = { name: "socks", price: 5, color: "red" };
const { name, price, color } = product;

console.log(`Those ${color} ${name} cost ${price} euros`);
console.log('\n');


// Cr√©er des variables par d√©composition √† partir d'un tableau

const animals = ["Hubert", "Rosemary", "Paul"];
const [hamster, nini, guineaFowl] = animals;

console.log(hamster);
console.log(nini);
console.log(guineaFowl);
console.log('\n');

// Exp√©rience WCS

const fruits = ["üçè", "üçç", "ü•ù", "ü•ë", "üçí", "üçì"];

const [pomme, ananas, kiwi, avocat, cerise, fraise] = fruits;

console.log(`${pomme} - ${ananas} - ${kiwi} - ${avocat} - ${cerise} - ${fraise}`);
console.log('\n');


// Syntaxe "rest"

const sock = { sockName: "socks", price: 5, color: "red" };
// les '...' (rest) vont r√©f√©rencer un nouvel objet avec les propri√©t√©s qui n'ont pas √©t√© cit√©es
const { sockName, ...otherProperties } = sock;

console.log(sockName);
console.log(otherProperties);
console.log('\n');

// Exp√©rience WCS

const sameFruits = ["üçè", "üçç", "ü•ù", "ü•ë", "üçí", "üçì"];
// les '...' (rest) vont r√©f√©rencer un nouveau tableau avec les valeurs qui n'ont pas √©t√© cit√©es
[apple, pineapple, ...otherFruits] = sameFruits;

console.log(`${apple}, ${pineapple}`);
console.log(otherFruits);
